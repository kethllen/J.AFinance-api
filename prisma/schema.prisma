// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  name     String
  email    String @unique
  password String
  obras    Obra[]

  @@map("users")
}

model Obra {
  id         Int    @id @default(autoincrement())
  user       User   @relation(fields: [userId], references: [id])
  userId     Int
  name       String @unique
  valor      Int
  valorAtual Int    @default(0)

  entradas    Entrada[]
  materiais   Material[]
  fechamentos Fechamento[]
  despesas    Despesa[]
  empreitas   Empreita[]

  @@map("obras")
}

model Entrada {
  id     Int      @id @default(autoincrement())
  obra   Obra     @relation(fields: [obraId], references: [id])
  obraId Int
  data   DateTime @default(now())
  valor  Int

  @@map("entradas")
}

model Material {
  id          Int      @id @default(autoincrement())
  obra        Obra     @relation(fields: [obraId], references: [id])
  obraId      Int
  description String
  fornecedor  String
  data        DateTime @default(now())
  valor       Int

  @@map("materiais")
}

model Despesa {
  id          Int      @id @default(autoincrement())
  obra        Obra     @relation(fields: [obraId], references: [id])
  obraId      Int
  description String
  data        DateTime @default(now())
  valor       Int

  @@map("despesas")
}

model Funcionario {
  id       Int    @id @default(autoincrement())
  nome     String @unique
  conta    String
  agencia  String
  operacao String
  pix      String

  empreitas  Empreita[]
  pagamentos Pagamento[]
  @@map("funcionarios")
}

model Fechamento {
  id         Int         @id @default(autoincrement())
  obra       Obra        @relation(fields: [obraId], references: [id])
  obraId     Int
  name       String
  data       DateTime    @default(now())
  valor      Int
  pagamentos Pagamento[]

  @@map("fechamentos")
}

model Empreita {
  id            Int         @id @default(autoincrement())
  obra          Obra        @relation(fields: [obraId], references: [id])
  obraId        Int
  funcionario   Funcionario @relation(fields: [funcionarioId], references: [id])
  funcionarioId Int
  valor         Int
  description   String
  valorPago     Int         @default(0)

  pagamentos Pagamento[]
  @@map("empreitas")
}

model Pagamento {
  id            Int         @id @default(autoincrement())
  fechamento    Fechamento  @relation(fields: [fechaentoId], references: [id])
  fechaentoId   Int
  empreita      Empreita    @relation(fields: [empreitaId], references: [id])
  empreitaId    Int
  funcionario   Funcionario @relation(fields: [funcionarioId], references: [id])
  funcionarioId Int
  valor         Int
  quantDias     Int

  @@map("pagamentos")
}
